package adminui;

import model.dao.*;
import model.to.*;
import java.util.List;
import javax.swing.JOptionPane;
import utility.Validations;

public class AddNewAccountProof extends javax.swing.JInternalFrame {

    private int srno;
    public AddNewAccountProof() {
        initComponents();
        jcbAccountID.removeAllItems();
        jcbAccountID.addItem("Choose Account ID");
        List<AccountInfoTO> accid= new AccountInfoDAO().getAllRecord();
        if(accid!=null && accid.size()>=0) {
            for(AccountInfoTO AIT:accid) {
                jcbAccountID.addItem(AIT);

            }
        }
        jcbProofID.removeAllItems();
        jcbProofID.addItem("Choose Proof ID");
        List<ProofInfoTO> proof= new ProofInfoDAO().getAllRecord();
           if(proof!=null && proof.size()>=0) {
            for(ProofInfoTO PIT:proof) {
                jcbProofID.addItem(PIT);
            }
        }
    }
    public AddNewAccountProof(AccountProofTO record){
        this();
        if (record != null){
            this.srno=record.getSrno();
            jtfProofValue.setText(record.getProofvalue());
            for(int i=1;i<jcbProofID.getItemCount();i++){
                    ProofInfoTO pit=(ProofInfoTO)jcbProofID.getItemAt(i);
                    if(pit.getProofid()==record.getProofid()){
                        jcbProofID.setSelectedIndex(i);
                        break;
                    }
                }
            for(int i=1;i<jcbAccountID.getItemCount();i++){
                    AccountInfoTO pit=(AccountInfoTO)jcbAccountID.getItemAt(i);
                    if(pit.getAccountid().equals(record.getAccountid())){
                        jcbAccountID.setSelectedIndex(i);
                        break;
        }
    }
            btnAdd.setText("Update Account Information");
            setTitle("Update Account Information");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfProofValue = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jcbProofID = new javax.swing.JComboBox();
        jcbAccountID = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setTitle("Add New Account Proof Details");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Enter Proof ID");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Enter Account ID");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Enter Proof Value");

        jtfProofValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfProofValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfProofValueActionPerformed(evt);
            }
        });
        jtfProofValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfProofValueKeyTyped(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAdd.setText("Add Account Proof Details");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jcbProofID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbAccountID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfProofValue, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                    .addComponent(jcbProofID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbAccountID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(104, 104, 104))
            .addGroup(layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbProofID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbAccountID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfProofValue, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfProofValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfProofValueActionPerformed
        
    }//GEN-LAST:event_jtfProofValueActionPerformed

    private void jtfProofValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfProofValueKeyTyped
        if(!Character.isLetterOrDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_jtfProofValueKeyTyped

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String message="";
        boolean allvalid=true;
        String proofval=jtfProofValue.getText().trim();
        if(Validations.isEmpty(proofval))
        {
            message+="Please Enter Proof Value\n\n";
            allvalid=false;
        }
        if(jcbProofID.getSelectedIndex()==0) {
           message+="Please Choose Any Proof ID\n\n";
           allvalid=false;
       }
        if(jcbAccountID.getSelectedIndex()==0) {
           message+="Please Choose Any Account ID\n\n";
           allvalid=false;
       }
        if(allvalid)
        {
            AccountProofTO record=new AccountProofTO();
            ProofInfoTO pit=(ProofInfoTO) jcbProofID.getSelectedItem();
            AccountInfoTO ait=(AccountInfoTO) jcbAccountID.getSelectedItem();
            record.setProofid(pit.getProofid());
            record.setAccountid(ait.getAccountid());
            record.setProofvalue(proofval);
            AccountProofDAO action=new AccountProofDAO();
            if (btnAdd.getText().contains("Add")){
            if(action.insertrecord(record))
            {
             int srno=CommonDAO.getLastInsertID();
             message=" Info Is Added With Srno [ "+srno +" ] in System Database";
                
            }else
            {
                message="Info Is Not Added Due To"+action.getErrormessage();
            }
            
        }else if(btnAdd.getText().contains("Update")){
            record.setSrno(srno);
            if (action.updaterecord(record)) {
                    message = "Company Info Is Updated In Database";
                } else {
                    message = "Info Is Not Updated  Due To " + action.getErrormessage();
                }
                CommonOperations.showScreen(getDesktopPane(), new ViewAccountProofDetails());
                dispose();
        }else{
            message = "Invalid Operation";
        }
        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox jcbAccountID;
    private javax.swing.JComboBox jcbProofID;
    private javax.swing.JTextField jtfProofValue;
    // End of variables declaration//GEN-END:variables
}
